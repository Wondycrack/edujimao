
    <div id="map" data-provinces="<%= @geojson.to_json %>">
    </div>
    <script>
      console.log("in province index")
        mapboxgl.accessToken = 'pk.eyJ1IjoibWlja2EyMzQ1IiwiYSI6ImNrY3k4d2c5MjA3bmIydHBkYzYzaXBmNzUifQ.ZCW9vRqj7XbHRtATshYXHQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v10',
            center: [103.5000, 33.000],
            zoom: 3
        });

        map.scrollZoom.disable();

        map.on('load', function() {
            console.log("map loading..")
            const mapElement = document.getElementById('map')
            console.log("mapElement", mapElement)
            const provinces = JSON.parse(mapElement.dataset.provinces);
            map.loadImage(
                'https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png',
                // Add an image to use as a custom marker
                function(error, image) {
                    if (error) throw error;
                    map.addImage('custom-marker', image);

                    map.addSource('places', {
                        'type': 'geojson',
                        'data': provinces
                    });

                    // Add a layer showing the places.
                    map.addLayer({
                        'id': 'places',
                        'type': 'symbol',
                        'source': 'places',
                        'layout': {
                            'icon-image': 'custom-marker',
                            'icon-allow-overlap': true
                        }
                    });
                }
            );

            // Create a popup, but don't add it to the map yet.
            var popup = new mapboxgl.Popup({
                closeButton: false,
                closeOnClick: false
            });

            map.on('mouseenter', 'places', function(e) {
                // Change the cursor style as a UI indicator.
                map.getCanvas().style.cursor = 'pointer';

                var coordinates = e.features[0].geometry.coordinates.slice();
                var description = e.features[0].properties.description;

                // Ensure that if the map is zoomed out such that multiple
                // copies of the feature are visible, the popup appears
                // over the copy being pointed to.
                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                }

                // Populate the popup and set its coordinates
                // based on the feature found.
                popup
                    .setLngLat(coordinates)
                    .setHTML(description)
                    .addTo(map);
            });

            map.on('mouseleave', 'places', function() {
                map.getCanvas().style.cursor = '';
                popup.remove();
            });
        });
    </script>

